import streamlit as st
import pandas as pd
import numpy as np
import plotly.express as px

# Configura√ß√£o da p√°gina
st.set_page_config(
    page_title="Trabalho Final - Introdu√ß√£o √† Ci√™ncia de Dados CIADM1A-CIA001-20251",
    page_icon="üêî",
    layout="wide",
    initial_sidebar_state="expanded",
)

# T√≠tulo principal
st.title("Trabalho Final - Introdu√ß√£o √† Ci√™ncia de Dados CIADM1A-CIA001-20251")
st.subheader("Professor: Alexandre Vaz Roriz")
st.subheader("Alunos: Diego S√°, Ewerton Calazans")

st.title('An√°lise de Galin√°ceos no Brasil (IBGE 2017)')
st.markdown("---")

# =============================================
# üîπ 1. Carregar Dados Reais do GitHub
# =============================================
st.header("üìÇ Carregando Dados Reais")

# URL do arquivo no GitHub (Substitua pelo correto caso necess√°rio)
csv_url = "https://raw.githubusercontent.com/calazansiesb/CIADM1A/main/GALINACEOS.csv"

# Carregar dados
try:
    df = pd.read_csv(csv_url, sep=';')
    st.success("Dados carregados com sucesso!")
except Exception as e:
    st.error(f"Erro ao carregar os dados: {e}")
    st.stop()

# Mostrar um preview dos dados
st.subheader("Visualiza√ß√£o dos Dados")
st.dataframe(df.head())

# =============================================
# üîπ 2. Propor√ß√£o dos Sistemas de Cria√ß√£o
# =============================================
st.header('üìä Propor√ß√£o dos Sistemas de Cria√ß√£o')

if 'SIST_CRIA' in df.columns:
    freq_sistemas = df['SIST_CRIA'].value_counts(normalize=True) * 100
    fig1 = px.pie(
        values=freq_sistemas.values,
        names=freq_sistemas.index,
        title='Distribui√ß√£o Percentual dos Sistemas de Cria√ß√£o',
        color_discrete_sequence=px.colors.qualitative.Pastel
    )
    st.plotly_chart(fig1, use_container_width=True)
else:
    st.warning("A coluna 'SIST_CRIA' n√£o foi encontrada no dataset.")

st.info("""
    **üìä An√°lise dos Sistemas de Cria√ß√£o**
    
    üìå **Principais observa√ß√µes:**
    - Os sistemas 3-SIST_PFC (28,3%) e 1-SIST_POC (28,1%) apresentam propor√ß√µes muito semelhantes, sendo os mais representativos do total.
    - A categoria 4-Outro (27,3%) tamb√©m possui participa√ß√£o relevante, indicando diversidade e presen√ßa de outros sistemas al√©m dos principais.
    - O sistema 2-SIST_POI (16,4%) apresenta a menor fatia, mas ainda assim representa uma parcela consider√°vel.

    üí° **Interpreta√ß√£o:**
    - O equil√≠brio entre SIST_PFC e SIST_POC sugere concorr√™ncia ou complementaridade entre esses sistemas na cria√ß√£o.
    - A expressiva participa√ß√£o da categoria "Outro" ressalta a exist√™ncia de m√∫ltiplos sistemas alternativos, possivelmente personalizados ou regionais.
    - A presen√ßa significativa do SIST_POI, mesmo sendo a menor, pode indicar nichos produtivos ou oportunidades para expans√£o.
""")

# =============================================
# üîπ 3. Distribui√ß√£o por Unidade Federativa
# =============================================
st.header('üåé Distribui√ß√£o por Unidade Federativa')

if 'NOM_TERR' in df.columns:
    freq_estab_por_uf = df['NOM_TERR'].value_counts()
    fig2 = px.bar(
        x=freq_estab_por_uf.index,
        y=freq_estab_por_uf.values,
        title='N√∫mero de Estabelecimentos por UF',
        labels={'x': 'Unidade Federativa', 'y': 'Quantidade'},
        color_discrete_sequence=px.colors.qualitative.Vivid
    )
    st.plotly_chart(fig2, use_container_width=True)
else:
    st.warning("A coluna 'NOM_TERR' n√£o foi encontrada no dataset.")

st.info("""
    **üåé An√°lise da Distribui√ß√£o por Unidade Federativa**
    
    üìå **Principais observa√ß√µes:**
    - Os maiores valores de estabelecimentos est√£o concentrados nas regi√µes Sul, Sudeste e Nordeste, com estados como Paran√°, Santa Catarina, Bahia, Pernambuco e Rio Grande do Sul entre os primeiros colocados.
    - O n√∫mero de estabelecimentos por UF apresenta uma distribui√ß√£o relativamente homog√™nea nos estados l√≠deres, com leve decl√≠nio nos estados das regi√µes Norte e Centro-Oeste.
    - Estados como Acre, Amap√°, Roraima e Amazonas est√£o entre os que apresentam menor quantidade de estabelecimentos.

    üí° **Interpreta√ß√£o:**
    - A forte presen√ßa de estabelecimentos nas regi√µes Sul, Sudeste e Nordeste pode estar relacionada √† infraestrutura mais desenvolvida, tradi√ß√£o produtiva e maior demanda de mercado.
    - A menor concentra√ß√£o de estabelecimentos em estados do Norte e parte do Centro-Oeste pode indicar desafios log√≠sticos, menor densidade populacional ou potencial para expans√£o do setor.
    - A an√°lise sugere oportunidades de investimento e crescimento nas regi√µes menos representadas, promovendo maior equil√≠brio nacional na distribui√ß√£o de estabelecimentos.
""")

# =============================================
# üîπ 4. Rela√ß√£o: Tamanho √ó Trabalhadores
# =============================================
st.header('üë• Rela√ß√£o entre Tamanho do Estabelecimento e N√∫mero de Trabalhadores')

if 'GAL_TOTAL' in df.columns and 'N_TRAB_TOTAL' in df.columns:
    df['GAL_TOTAL'] = pd.to_numeric(df['GAL_TOTAL'], errors='coerce')
    df['N_TRAB_TOTAL'] = pd.to_numeric(df['N_TRAB_TOTAL'], errors='coerce')
    
    corr = df['GAL_TOTAL'].corr(df['N_TRAB_TOTAL'])
    
    fig3 = px.scatter(
        x=df['GAL_TOTAL'],
        y=df['N_TRAB_TOTAL'],
        title='Rela√ß√£o entre Tamanho do Estabelecimento e N√∫mero de Trabalhadores',
        labels={'x': 'Total de Galin√°ceos', 'y': 'N√∫mero de Trabalhadores'},
        trendline="ols"
    )
    st.plotly_chart(fig3, use_container_width=True)

    st.info(f"**Correla√ß√£o Calculada:** {corr:.2f}")

    st.info("""
        **üë• An√°lise da Rela√ß√£o entre Tamanho do Estabelecimento e N√∫mero de Trabalhadores**

        üìå **Principais observa√ß√µes:**
        - A maior parte dos estabelecimentos concentra-se nos menores valores de total de galin√°ceos, apresentando alta dispers√£o no n√∫mero de trabalhadores.
        - Mesmo entre estabelecimentos de pequeno porte, h√° casos com grande n√∫mero de funcion√°rios, indicando diferen√ßas operacionais ou de modelo de gest√£o.
        - √Ä medida que o tamanho do estabelecimento aumenta, observa-se uma tend√™ncia de diminui√ß√£o da varia√ß√£o no n√∫mero de trabalhadores, com a maioria das unidades maiores empregando at√© cerca de 200 pessoas.

        üí° **Interpreta√ß√£o:**
        - A dispers√£o sugere que fatores al√©m do tamanho f√≠sico, como tecnologia, automa√ß√£o, tipo de produ√ß√£o e especializa√ß√£o, influenciam fortemente a necessidade de m√£o de obra.
        - Pequenos estabelecimentos podem demandar mais trabalhadores proporcionalmente, possivelmente devido a processos menos mecanizados ou maior diversifica√ß√£o de atividades.
        - Estabelecimentos maiores tendem a otimizar o uso da for√ßa de trabalho, possivelmente refletindo maior efici√™ncia operacional.
    """)

else:
    st.warning("As colunas 'GAL_TOTAL' ou 'N_TRAB_TOTAL' n√£o foram encontradas no dataset.")
    
    
# =============================================
# üîπ 5. Distribui√ß√£o por Porte dos Estabelecimentos
# =============================================
st.header('üè≠ Distribui√ß√£o por Porte dos Estabelecimentos')

if 'Q_DZ_PROD' in df.columns:
    df['Q_DZ_PROD'] = pd.to_numeric(df['Q_DZ_PROD'], errors='coerce')
    df.dropna(subset=['Q_DZ_PROD'], inplace=True)

    # Diagn√≥stico da distribui√ß√£o
    st.write(df['Q_DZ_PROD'].describe())
    st.write(df['Q_DZ_PROD'].value_counts(bins=10))

    # Ajuste dos bins conforme os dados
    max_val = df['Q_DZ_PROD'].max()
    bins = [-float('inf'), 1000, 5000, max_val + 1]
    labels = ['Pequeno', 'M√©dio', 'Grande']

    df['Porte'] = pd.cut(
        df['Q_DZ_PROD'],
        bins=bins,
        labels=labels,
        include_lowest=True
    )

    freq_portes = df['Porte'].value_counts().reindex(labels, fill_value=0)

    fig4 = px.bar(
        x=freq_portes.index,
        y=freq_portes.values,
        title='Distribui√ß√£o de Estabelecimentos por Porte',
        labels={'x': 'Porte do Estabelecimento', 'y': 'Quantidade'},
        color_discrete_sequence=['#636EFA', '#EF553B', '#00CC96']
    )
    st.plotly_chart(fig4, use_container_width=True)
else:
    st.warning("A coluna 'Q_DZ_PROD' n√£o foi encontrada no dataset.")

# =============================================
# üîπ Rodap√©
# =============================================
st.markdown("---")
st.caption("""
üîé *An√°lise desenvolvida com base nos dados reais do IBGE 2017*  
üìÖ *Atualizado em Maio 2025*  
""")
