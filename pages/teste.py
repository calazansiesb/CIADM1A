import streamlit as st
import pandas as pd
import numpy as np
from sklearn.linear_model import LinearRegression
from sklearn.preprocessing import OneHotEncoder
from sklearn.metrics import mean_squared_error, r2_score
from sklearn.model_selection import train_test_split
import matplotlib.pyplot as plt
import plotly.express as px

# ============================================================
# EXPLICA√á√ÉO SOBRE A MATRIZ DE CORRELA√á√ÉO E INTERPRETA√á√ÉO
# ============================================================
st.info("""
**üîç An√°lise da Distribui√ß√£o de Densidade de Aves por Sistema de Cria√ß√£o**

üìå **Principais observa√ß√µes:**
- O sistema "Outros" apresenta concentra√ß√£o de estabelecimentos com menor n√∫mero total de aves, predominantemente entre 6.000 e 7.000 cabe√ßas.
- "Ovos para Consumo" e "Frangos de Corte" mostram maior dispers√£o, com a maioria dos registros entre 9.000 e 12.000 aves por estabelecimento.
- "Ovos para Incuba√ß√£o" destaca-se por concentrar-se nas faixas mais elevadas, acima de 13.000 aves.

üí° **Interpreta√ß√£o:**
- O gr√°fico evidencia diferentes perfis produtivos: sistemas voltados para incuba√ß√£o tendem a operar com plant√©is mais numerosos, enquanto sistemas classificados como "Outros" concentram-se em pequenas cria√ß√µes.
- A varia√ß√£o na densidade sugere especializa√ß√£o e segmenta√ß√£o claras entre os sistemas de cria√ß√£o, refletindo demandas produtivas e estrat√©gias distintas.
- As informa√ß√µes s√£o √∫teis para orientar pol√≠ticas de apoio e estrat√©gias de crescimento conforme o perfil predominante de cada sistema.

---

### An√°lise da Matriz de Correla√ß√£o entre Vari√°veis Num√©ricas

A matriz de correla√ß√£o apresentada permite identificar o grau de associa√ß√£o linear entre as principais vari√°veis envolvidas na produ√ß√£o av√≠cola. 

**Principais Observa√ß√µes:**
- **Fortes correla√ß√µes positivas**:
  - Entre `PRODUCAO_TOTAL` e `OVOS_PRODUZIDOS`, indicando que o aumento da produ√ß√£o total est√° fortemente relacionado ao aumento da produ√ß√£o de ovos.
  - Entre `GALINHAS_VENDIDAS` e `COMERCIALIZACAO`, sugerindo que a venda de galinhas acompanha diretamente o volume comercializado.
  - Entre `TRABALHADORES` e vari√°veis como `PRODUCAO_TOTAL` e `GALINHAS_VENDIDAS`, o que sugere que estabelecimentos maiores (em produ√ß√£o ou comercializa√ß√£o) demandam mais m√£o de obra.

- **Correla√ß√£o baixa ou negativa**:
  - `AGRICULTURA_FAMILIAR` apresenta correla√ß√£o baixa ou negativa com a maioria das vari√°veis produtivas, indicando que os estabelecimentos classificados como agricultura familiar tendem a operar em menor escala, com menor produ√ß√£o e comercializa√ß√£o.
  - `AREA_TOTAL` possui correla√ß√£o relativamente baixa com vari√°veis produtivas, sugerindo que o tamanho f√≠sico do estabelecimento n√£o √© o principal determinante do volume produtivo, provavelmente porque h√° intensifica√ß√£o em √°reas menores.

**Interpreta√ß√£o:**
- **Especializa√ß√£o e Segmenta√ß√£o**: Assim como observado na an√°lise da densidade de aves por sistema de cria√ß√£o, a matriz de correla√ß√£o refor√ßa a exist√™ncia de diferentes perfis produtivos. Sistemas voltados √† incuba√ß√£o e produ√ß√£o de ovos tendem a ser mais intensivos e menos familiares, enquanto sistemas menores e familiares apresentam menor produ√ß√£o e comercializa√ß√£o.
- **Pol√≠ticas P√∫blicas**: A compreens√£o dessas correla√ß√µes √© fundamental para orientar pol√≠ticas p√∫blicas adequadas ao perfil de cada segmento. Por exemplo, incentivos para mecaniza√ß√£o e capacita√ß√£o podem ser mais √∫teis para grandes produtores, enquanto apoio t√©cnico e acesso a mercados podem beneficiar pequenas produ√ß√µes familiares.

**Resumo**: A matriz de correla√ß√£o evidencia que o aumento da produ√ß√£o est√° mais relacionado √† intensifica√ß√£o do uso de m√£o de obra e ao perfil do sistema produtivo do que ao tamanho da √°rea utilizada. Esta an√°lise, em conjunto com a distribui√ß√£o de densidade de aves, oferece uma vis√£o abrangente dos fatores que diferenciam os sistemas de cria√ß√£o av√≠cola no contexto analisado.
""")

# Configura√ß√£o da p√°gina
st.set_page_config(
    page_title="Modelo de Regress√£o Av√≠cola - IBGE 2017",
    page_icon="üêî",
    layout="wide",
    initial_sidebar_state="expanded",
)

# T√≠tulo principal
st.title('Modelo de Regress√£o para Produ√ß√£o Av√≠cola (IBGE 2017)')
st.markdown("---")

# Carregar dados fict√≠cios (substituir por dados reais)
np.random.seed(42)
df = pd.DataFrame({
    'PRODUCAO_TOTAL': np.random.randint(1000, 50000, 100),
    'GALINACEOS': np.random.randint(500, 25000, 100),
    'AREA_TOTAL': np.random.uniform(1, 50, 100),
    'TRABALHADORES': np.random.randint(1, 20, 100),
    'GALINHAS_VENDIDAS': np.random.randint(300, 15000, 100),
    'OVOS_PRODUZIDOS': np.random.randint(100, 10000, 100),
    'COMERCIALIZACAO': np.random.randint(0, 2, 100),
    'AGRICULTURA_FAMILIAR': np.random.randint(0, 2, 100),
    'SISTEMA_CRIACAO': np.random.choice(['3-SIST_PFC', '1-SIST_POC', '2-SIST_POI', '4-Outro'], 100),
    'REGIAO': np.random.choice(['Norte', 'Nordeste', 'Sudeste', 'Sul', 'Centro-Oeste'], 100),
})

# Definir vari√°veis
target = 'PRODUCAO_TOTAL'
features = [
    'GALINACEOS', 'AREA_TOTAL', 'TRABALHADORES', 'GALINHAS_VENDIDAS', 
    'OVOS_PRODUZIDOS', 'COMERCIALIZACAO', 'AGRICULTURA_FAMILIAR',
    'SISTEMA_CRIACAO', 'REGIAO'
]

# =============================================
# SIDEBAR - CONFIGURA√á√ïES DO MODELO
# =============================================
st.sidebar.header("Configura√ß√µes do Modelo")

# Sele√ß√£o de vari√°veis
selected_features = st.sidebar.multiselect(
    "Vari√°veis explicativas:",
    features,
    default=features[:5]
)

# Par√¢metros do modelo
test_size = st.sidebar.slider(
    "Tamanho do conjunto de teste (%):",
    min_value=10, max_value=40, value=20
)

show_raw_data = st.sidebar.checkbox("Mostrar dados brutos", False)
show_correlations = st.sidebar.checkbox("Mostrar matriz de correla√ß√£o", True)

# =============================================
# AN√ÅLISE EXPLORAT√ìRIA
# =============================================
if show_raw_data:
    st.subheader("Dados Brutos")
    st.dataframe(df)

if show_correlations:
    st.subheader("Matriz de Correla√ß√£o")
    numeric_cols = df.select_dtypes(include=[np.number]).columns
    corr_matrix = df[numeric_cols].corr()
    
    fig_corr = px.imshow(
        corr_matrix,
        text_auto=True,
        color_continuous_scale='Blues',
        title='Matriz de Correla√ß√£o entre Vari√°veis Num√©ricas'
    )
    st.plotly_chart(fig_corr, use_container_width=True)

# =============================================
# PREPARA√á√ÉO DOS DADOS
# =============================================
st.subheader("Prepara√ß√£o dos Dados")

# One-hot encoding para vari√°veis categ√≥ricas
categorical = [col for col in selected_features if df[col].dtype == 'object']
df_model = df[[target] + selected_features].copy()

if categorical:
    df_model = pd.get_dummies(df_model, columns=categorical, drop_first=True)
    st.write("Vari√°veis categ√≥ricas transformadas (one-hot encoding):")
    st.dataframe(df_model.head())
else:
    st.write("Nenhuma vari√°vel categ√≥rica selecionada.")

# Separa√ß√£o em X e y
X = df_model.drop(columns=[target])
y = df_model[target]

# Divis√£o treino-teste
X_train, X_test, y_train, y_test = train_test_split(
    X, y, 
    test_size=test_size/100, 
    random_state=42
)

st.write(f"Divis√£o dos dados: {100-test_size}% treino, {test_size}% teste")

# =============================================
# TREINAMENTO DO MODELO
# =============================================
st.subheader("Treinamento do Modelo")

model = LinearRegression()
model.fit(X_train, y_train)

# Predi√ß√£o e m√©tricas
y_pred = model.predict(X_test)
mse = mean_squared_error(y_test, y_pred)
rmse = np.sqrt(mse)
r2 = r2_score(y_test, y_pred)

# Exibir m√©tricas em colunas
col1, col2, col3 = st.columns(3)
col1.metric("RMSE", f"{rmse:.2f}")
col2.metric("R¬≤", f"{r2:.3f}")
col3.metric("Amostras de Teste", len(y_test))

# =============================================
# RESULTADOS DO MODELO
# =============================================
st.subheader("Import√¢ncia das Vari√°veis (Coeficientes)")

coef_df = pd.DataFrame({
    'Vari√°vel': X.columns,
    'Coeficiente': model.coef_,
    'Absoluto': np.abs(model.coef_)
}).sort_values(by='Absoluto', ascending=False)

# Gr√°fico de import√¢ncia
fig_coef = px.bar(
    coef_df,
    x='Vari√°vel',
    y='Coeficiente',
    color='Coeficiente',
    color_continuous_scale='RdBu',
    title='Coeficientes do Modelo de Regress√£o'
)
st.plotly_chart(fig_coef, use_container_width=True)

# Tabela de coeficientes
st.dataframe(coef_df.drop(columns=['Absoluto']))

# =============================================
# VISUALIZA√á√ÉO DE RESULTADOS
# =============================================
st.subheader("Valores Observados vs. Preditos")

# Gr√°fico scatter plot com Plotly
fig_scatter = px.scatter(
    x=y_test,
    y=y_pred,
    labels={'x': 'Valores Observados', 'y': 'Valores Preditos'},
    title='Compara√ß√£o entre Valores Observados e Preditos',
    trendline="lowess"
)

# Adicionar linha de refer√™ncia
fig_scatter.add_shape(
    type="line",
    x0=y_test.min(), y0=y_test.min(),
    x1=y_test.max(), y1=y_test.max(),
    line=dict(color="Red", dash="dash")
)

st.plotly_chart(fig_scatter, use_container_width=True)

# =============================================
# AN√ÅLISE RESIDUAL
# =============================================
st.subheader("An√°lise de Res√≠duos")

residuals = y_test - y_pred

fig_residuals = px.scatter(
    x=y_pred,
    y=residuals,
    labels={'x': 'Valores Preditos', 'y': 'Res√≠duos'},
    title='Gr√°fico de Res√≠duos'
)
fig_residuals.add_hline(y=0, line_dash="dash", line_color="red")

st.plotly_chart(fig_residuals, use_container_width=True)

# =============================================
# DOWNLOAD DO MODELO
# =============================================
st.markdown("---")
st.download_button(
    label="Download dos Resultados (CSV)",
    data=coef_df.to_csv(index=False).encode('utf-8'),
    file_name='resultados_regressao_avicola.csv',
    mime='text/csv'
)

# Rodap√©
st.caption("""
üîé *An√°lise desenvolvida com base em dados simulados do IBGE 2017*  
üìÖ *Atualizado em Outubro 2023*  
""")
