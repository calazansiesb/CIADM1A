import streamlit as st
import pandas as pd
import plotly.express as px

# Configura√ß√£o da p√°gina
st.set_page_config(
    page_title="An√°lise de Lucratividade Av√≠cola",
    page_icon="üí∞",
    layout="wide",
    initial_sidebar_state="expanded",
)

# T√≠tulo principal
st.title('üìà Fatores que Impactam a Lucratividade da Granja')
st.markdown("---")

## ----------------------------
## SE√á√ÉO 1: VISUALIZA√á√ÉO DOS FATORES
## ----------------------------

# Dados dos coeficientes
coef_data = {
    "Fator": ["Tecnologia", "Terra", "M√£o de Obra", "Marketing", "Capital", "Insumos", 
             "Qualidade", "Log√≠stica", "Sanidade", "Clima"],
    "Impacto": [0.9, -0.8, 0.5, -0.3, 0.2, -0.1, 0.7, -0.4, 0.6, -0.2],
    "Categoria": ["Positivo", "Negativo", "Positivo", "Negativo", "Positivo", "Negativo",
                "Positivo", "Negativo", "Positivo", "Negativo"]
}

coef_df = pd.DataFrame(coef_data)
coef_df = coef_df.sort_values("Impacto", key=abs, ascending=False).head(10)

# Gr√°fico de barras interativo
fig = px.bar(coef_df, 
             x="Fator", 
             y="Impacto",
             color="Categoria",
             color_discrete_map={
                 "Positivo": "#4CAF50",
                 "Negativo": "#F44336"
             },
             title="üìä Top Fatores que Impactam a Lucratividade",
             labels={"Impacto": "Coeficiente de Impacto"},
             text_auto=True,
             height=500)

fig.update_layout(
    hovermode="x unified",
    xaxis_title="",
    yaxis_title="For√ßa do Impacto",
    showlegend=False
)

# Destaque os maiores impactos
fig.add_annotation(
    x="Tecnologia", y=0.9,
    text="Maior impacto positivo",
    showarrow=True,
    arrowhead=1,
    ax=0, ay=-40
)

fig.add_annotation(
    x="Terra", y=-0.8,
    text="Maior impacto negativo",
    showarrow=True,
    arrowhead=1,
    ax=0, ay=40
)

st.plotly_chart(fig, use_container_width=True)

## ----------------------------
## SE√á√ÉO 2: AN√ÅLISE DOS RESULTADOS
## ----------------------------

st.header("üîç Interpreta√ß√£o dos Fatores")

# Criar colunas para organiza√ß√£o
col1, col2 = st.columns(2)

with col1:
    st.subheader("‚úÖ Fatores Positivos")
    st.markdown("""
    - **Tecnologia (0.90)**: Automa√ß√£o e sistemas de monitoramento
    - **Qualidade (0.70)**: Padr√µes de produ√ß√£o e certifica√ß√µes
    - **Sanidade (0.60)**: Controle de doen√ßas e biosseguran√ßa
    - **M√£o de Obra (0.50)**: Treinamento e especializa√ß√£o
    - **Capital (0.20)**: Investimento em infraestrutura
    """)

with col2:
    st.subheader("‚ùå Fatores Negativos")
    st.markdown("""
    - **Terra (-0.80)**: Custo de expans√£o e manuten√ß√£o
    - **Log√≠stica (-0.40)**: Transporte e distribui√ß√£o
    - **Marketing (-0.30)**: Custos de promo√ß√£o e divulga√ß√£o
    - **Clima (-0.20)**: Vari√°veis meteorol√≥gicas
    - **Insumos (-0.10)**: Pre√ßo de ra√ß√£o e medicamentos
    """)

## ----------------------------
## SE√á√ÉO 3: RECOMENDA√á√ïES ESTRAT√âGICAS
## ----------------------------

st.header("üöÄ Recomenda√ß√µes para Aumentar a Lucratividade")

with st.expander("üìå Estrat√©gias Baseadas nos Dados", expanded=True):
    st.markdown("""
    **1. Priorize Investimentos em Tecnologia**  
    ‚Üí Sistemas de automa√ß√£o podem gerar at√© 90% mais lucro  
    ‚Üí Monitoramento em tempo real reduz perdas  
    
    **2. Otimize o Uso da Terra**  
    ‚Üí Evite expans√µes desnecess√°rias (-80% impacto)  
    ‚Üí Considere sistemas verticais ou intensivos  
    
    **3. Fortale√ßa Controles Sanit√°rios**  
    ‚Üí 60% de impacto positivo na lucratividade  
    ‚Üí Programas preventivos reduzem custos com doen√ßas  
    
    **4. Melhore a Qualidade dos Produtos**  
    ‚Üí Diferencial competitivo com 70% de retorno  
    ‚Üí Certifica√ß√µes agregam valor  
    """)

## ----------------------------
## SE√á√ÉO 4: DADOS DETALHADOS
## ----------------------------

st.header("üìã Detalhes T√©cnicos")

# Tabela interativa
st.dataframe(
    coef_df.sort_values("Impacto", ascending=False),
    column_config={
        "Fator": st.column_config.TextColumn("Fator Analisado"),
        "Impacto": st.column_config.NumberColumn(
            "For√ßa do Impacto",
            format="%.2f",
            help="Coeficiente padronizado do modelo de regress√£o"
        ),
        "Categoria": st.column_config.TextColumn("Natureza do Impacto")
    },
    hide_index=True,
    use_container_width=True
)

# Gr√°fico adicional - Distribui√ß√£o dos impactos
st.subheader("üìà Distribui√ß√£o dos Fatores de Impacto")
fig2 = px.pie(coef_df, 
             names="Categoria", 
             values=coef_df["Impacto"].abs(),
             hole=0.4,
             title="Propor√ß√£o do Impacto Total por Categoria")
st.plotly_chart(fig2, use_container_width=True)

## ----------------------------
## RODAP√â
## ----------------------------
st.markdown("---")
st.caption("""
üî¨ An√°lise desenvolvida com base em modelo de regress√£o multivariada |  
üìÖ Atualizado em Junho 2023 |  
üìä Fonte: Dados simulados para fins demonstrativos
""")
